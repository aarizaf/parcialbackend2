services:
  db:
    image: postgres:16-alpine
    container_name: libraryapp-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: libraryapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: libraryapp-api
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/libraryapp?schema=public
      PORT: 3000
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Generando cliente de Prisma...' &&
        npx prisma generate &&
        echo 'Aplicando migraciones...' &&
        npx prisma migrate deploy &&
        echo 'Migraciones aplicadas exitosamente' &&
        echo 'Iniciando aplicaci√≥n...' &&
        node dist/main.js
      "

volumes:
  postgres_data: