# docker-compose.yml - Orquesta los servicios de la aplicación

version: '3.8'

services:
  # Servicio de base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: libraryapp-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: libraryapp
    ports:
      - "5432:5432"
    volumes:
      # Persiste los datos en un volumen para no perderlos
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio de la aplicación NestJS
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: libraryapp-api
    environment:
      # URL de conexión a la base de datos
      # 'db' es el nombre del servicio de postgres
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/libraryapp?schema=public"
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Monta el código para desarrollo (opcional)
      - ./src:/app/src
    command: >
      sh -c "
        echo '⏳ Esperando a que la base de datos esté lista...' &&
        npx prisma migrate deploy &&
        echo '✅ Migraciones aplicadas' &&
        node dist/main.js
      "
    restart: unless-stopped

volumes:
  # Volumen para persistir datos de PostgreSQL
  postgres_data:
